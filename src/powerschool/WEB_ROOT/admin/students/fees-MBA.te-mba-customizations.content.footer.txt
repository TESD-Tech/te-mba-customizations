<!-- BEGIN fees-MBA.te-mba-customizations.content.footer.txt -->
<style type="text/css">
	#family_computer_use_fee td {
		text-align: center;
		margin-top: 12px;
	}
</style>


<div id="email_dialog" title="Email Parent/Guardian" class="hidden" style="max-width: 1024px;">
	<form id="tesd_form" class="" style="margin-bottom: 4px;"
		action="~[if#guardianPortal.~[directory]=guardian]/guardian/changesrecorded.html[else#guardianPortal]/admin/changesrecorded.white.html?frn=~(frn)[/if#guardianPortal]"
		method="POST">
		<div style="" id="emailthis">
			<input type="text" name="from" value="noreply@tesd.net" size=75 class="hidden">
			To: <input type="text" name="mailto" value="" id="mailtoaddress" size=75>
			Student DCID: <input type="text" name="studentsdcid" value="" id="email_dcid">
			<span class="button" onclick="sendEmail()" id="sendReminderEmail">Send</span>
			<span class="email-status" id="emailStatus"></span>
			<input type="text" name="subject" value="" size=35 class="hidden">
			<input id="pt_embody" name="body" value='' class="hidden">
			<input type="hidden" id="mailout" type="text" name="ac" value="mail">
		</div>
	</form>
	<div contenteditable="true" class="box-round" style="padding: 12px; font-family: sans-serif; line-height: 1.6; color: #333; border: 1px solid #ddd;" id="email_body">
			<div>Dear Parent/Guardian,</div>

			<div>This email is to inform you that we have used the warranty for your child (<span class="student-name">~(first_name) ~(last_name)</span>) for this school year. A school-issued laptop to address a recent issue. This service was covered under the existing warranty.</div>

			<div>Please be aware that any <span style="font-style: italic;">further</span> repairs or replacements required for this laptop will <span style="font-style: italic;">no longer</span> be covered by the warranty and will involve a monetary charge. We encourage you to discuss proper care and handling of the device with <span class="student-name">~(first_name)</span> to minimize the risk of future damage.</div>

			<div>We appreciate your understanding and cooperation in ensuring your child's device remains in good working condition.</div>

			<div>If you have any questions regarding the laptop, please feel free to reach out to us at <a href="mailto:familyhelpdesk@tesd.net">familyhelpdesk@tesd.net</a>.</div>

			<div>More information regarding Repair Costs for District Laptops & iPads can be found here: <a href="https://www.tesd.net/repaircosts">https://www.tesd.net/repaircosts</a>.</div>

			<div style="margin-top: 2em;">Kind Regards,<br>
			T/E School District IT Department</div>
	</div>
</div>

<table id="family_computer_use_fee" class="grid">
	<thead>
		<tr>
			<th>Family ID</th>
			<th>School</th>
			<th>Student Number</th>
			<th>Student</th>
			<th>Amount</th>
			<th>Waived</th>
			<th>Paid</th>
			<th>Due</th>
			<th>Running Total</th>
			<th>BYOD</th>
		</tr>
	</thead>
	<tbody>
<!--
	Calculate the total computer use fees for the family of the selected student, capped at $100.
	Families are determined by shared custodial contacts using the ISCUSTODIAL flag on STUDENTCONTACTDETAIL.
-->
~[tlist_sql;
WITH FamilyCTE AS (
		SELECT DISTINCT
				studentcontactassoc.PERSONID,
				MIN(students.STUDENT_NUMBER) OVER (PARTITION BY studentcontactassoc.PERSONID) AS MinStudentNumber
		FROM students
			INNER JOIN STUDENTCONTACTASSOC ON STUDENTCONTACTASSOC.STUDENTDCID = students.dcid
			INNER JOIN STUDENTCONTACTDETAIL ON STUDENTCONTACTDETAIL.STUDENTCONTACTASSOCID = STUDENTCONTACTASSOC.STUDENTCONTACTASSOCID
					AND STUDENTCONTACTDETAIL.ISCUSTODIAL = 1
		WHERE students.schoolid < 5000
				AND students.enroll_status IN (-1, 0)
), familyIDs AS (
	SELECT
			students.person_id,
			fcte.PERSONID,
			DENSE_RANK() OVER (ORDER BY fcte.MinStudentNumber) AS FAMILYID
	FROM students
		INNER JOIN STUDENTCONTACTASSOC ON STUDENTCONTACTASSOC.STUDENTDCID = students.dcid
		INNER JOIN STUDENTCONTACTDETAIL ON STUDENTCONTACTDETAIL.STUDENTCONTACTASSOCID = STUDENTCONTACTASSOC.STUDENTCONTACTASSOCID
				AND STUDENTCONTACTDETAIL.ISCUSTODIAL = 1
		INNER JOIN FamilyCTE fcte ON studentcontactassoc.PERSONID = fcte.PERSONID
	WHERE students.schoolid < 5000
			AND students.enroll_status IN (-1, 0)
	
	ORDER BY students.STUDENT_NUMBER, fcte.personid
), family_ident AS (
	SELECT familyIDs.person_id
	, MIN( familyIDs.familyID ) familyID

FROM familyIDs

GROUP BY familyIDs.person_id

ORDER BY 2
),
this_family AS (
	SELECT family_ident.familyID
	FROM FAMILY_IDENT
		INNER JOIN students ON students.student_number = ~([STUDENTS]student_number)
			AND students.person_id = family_ident.person_id
),
family_fee AS (
	SELECT family_ident.familyID
		, CASE WHEN U_DEF_EXT_STUDENTS.BYOD = 1 
			OR COALESCE( U_STUDENT_FEE.waived, 0 ) = 1 
			THEN 0 ELSE u_student_fee.amt_due 
			END amt_due
		, u_student_fee.amt_due orig_amt_due
		, COALESCE( u_student_fee.amt_paid, 0 ) amt_paid
		, CASE WHEN U_DEF_EXT_STUDENTS.BYOD = 1 
			OR COALESCE( U_STUDENT_FEE.waived, 0 ) = 1 
			THEN 0 ELSE u_student_fee.amount 
			END amount
		, u_student_fee.amount orig_amount
		, u_student_fee.id u_student_fee_id
		, SUM( CASE WHEN U_DEF_EXT_STUDENTS.BYOD = 1 
			OR COALESCE( U_STUDENT_FEE.waived, 0 ) = 1 
			THEN 0 ELSE u_student_fee.amount 
			END ) OVER (PARTITION BY family_ident.familyID ORDER BY u_student_fee.amt_paid DESC, students.student_number) AS running_total
		, students.student_number
		, u_student_fee.fee_name
		, u_student_fee.notes
		, U_DEF_EXT_STUDENTS.BYOD
		, students.schoolid
		, u_student_fee.waived
	FROM students
		INNER JOIN U_DEF_EXT_STUDENTS ON U_DEF_EXT_STUDENTS.STUDENTSDCID = students.dcid
		INNER JOIN family_ident ON family_ident.person_id = students.person_id
		
		INNER JOIN this_family ON this_family.familyID = family_ident.familyID	
			
		INNER JOIN u_student_fee ON u_student_fee.studentsdcid = students.dcid
			AND u_student_fee.fee_name = 'Computer Use'
			AND u_student_fee.yearid = ~(curyearid)

		LEFT JOIN U_STUDENT_DELETED_FEE ON U_STUDENT_DELETED_FEE.STUDENTSDCID = students.dcid
			AND U_STUDENT_DELETED_FEE.YEARID = U_STUDENT_FEE.YEARID
			AND U_STUDENT_DELETED_FEE.FEE_TYPE_ID = U_STUDENT_FEE.FEE_TYPE_ID
		
		LEFT JOIN u_student_fee prior_year_fee ON prior_year_fee.id = u_student_fee.original_fee_id
		--INNER JOIN fee_type ON fee_type.id = fee.fee_type_id
	
	WHERE STUDENTS.ENROLL_STATUS IN ( 0 )
		-- AND U_STUDENT_DELETED_FEE.studentsdcid IS NULL
		AND prior_year_fee.id IS NULL
		
		--AND students.last_name = 'Tester'
),
family_fee_adjusted AS (
	SELECT family_fee.familyID
		, family_fee.student_number
		, family_fee.u_student_fee_id
		, family_fee.amount
		, family_fee.orig_amount
		, family_fee.amt_paid
		, family_fee.amt_due
		, family_fee.orig_amt_due
		, family_fee.running_total
		, ( ABS( family_fee.amount - CASE WHEN family_fee.running_total > 100 THEN family_fee.running_total - 100 ELSE 0 END ) 
			+ ( family_fee.amount - CASE WHEN family_fee.running_total > 100 THEN family_fee.running_total - 100 ELSE 0 END ) ) / 2 adjusted_amount
		, family_fee.fee_name
		, family_fee.notes
		, family_fee.byod
		, family_fee.schoolid
		, family_fee.waived
	FROM family_fee
)

SELECT family_fee_adjusted.familyid
	, schools.abbreviation
	, family_fee_adjusted.student_number
	, students.dcid studentdcid
	, students.lastfirst
	
	, family_fee_adjusted.amount
	, CASE WHEN COALESCE( family_fee_adjusted.waived, 0 ) = 1 THEN 'Y' ELSE '' END waived
	, family_fee_adjusted.amt_paid
	, family_fee_adjusted.amt_due
	, family_fee_adjusted.running_total
	, CASE WHEN COALESCE( U_DEF_EXT_STUDENTS.byod, 0 ) = 1 THEN 'Y' ELSE '' END byod

FROM family_fee_adjusted
	INNER JOIN students ON students.student_number = family_fee_adjusted.student_number
	INNER JOIN U_DEF_EXT_STUDENTS ON U_DEF_EXT_STUDENTS.STUDENTSDCID = students.dcid
	INNER JOIN schools ON schools.school_number = students.schoolid

ORDER BY family_fee_adjusted.amt_paid DESC, students.student_number
]
		<tr>
			<td>~(familyid)</td>
			<td>~(abbreviation)</td>
			<td>~(student_number)</td>
			<td><a href="/admin/students/fees-MBA.html?frn=001~(studentdcid)" target="_blank">~(lastfirst)</a></td>
			<td>~(amount)</td>
			<td>~(waived)</td>
			<td>~(amt_paid)</td>
			<td>~(amt_due)</td>
			<td>~(running_total)</td>
			<td>~(byod)</td>
		</tr>

[/tlist_sql]
	</tbody>
</table>

<script type="text/javascript">
	const byod = '~([STUDENTS.U_STUDENTS_EXTENSION]BYOD)';

	if( byod == '1' )
		$j( '#student_detail_header' ).prepend( '<span>BYOD</span>');

	const family_computer_use_fee = document.getElementById( 'family_computer_use_fee' );
	const nextYearFeesContainer = document.getElementById( 'nextYearFeesContainer' );

	nextYearFeesContainer.parentNode.insertBefore( family_computer_use_fee, nextYearFeesContainer );

	// Append firstWarrantyEmail button after #accountBalanceContainer
	const accountBalanceContainer = document.getElementById( 'accountBalanceContainer' );
	const firstWarrantyEmail = document.createElement( 'button' )
	// <button id="firstWarrantyEmail" style="margin-top: 8px;">Send First Warranty Email</button>
	firstWarrantyEmail.id = 'firstWarrantyEmail';
	firstWarrantyEmail.style.marginTop = '8px';
	firstWarrantyEmail.textContent = 'Send First Warranty Email';
	firstWarrantyEmail.onclick = function() {
		showWarrantyEmailDialog( this );
	}
	accountBalanceContainer.parentNode.insertBefore( firstWarrantyEmail, accountBalanceContainer.nextSibling );

	function showWarrantyEmailDialog(el) {
		// Clear out the email dialog
		$j('#missing_forms').html('')
		$j('#emailStatus').html('')
		// $j('#sendReminderEmail').removeClass('hidden')

		const email = '~[tlist_sql;
		SELECT LISTAGG(emailaddress.EMAILADDRESS, ', ') guardian_email
		FROM students
			INNER JOIN studentcontactassoc ON studentcontactassoc.studentdcid = students.dcid
				INNER JOIN STUDENTCONTACTDETAIL ON STUDENTCONTACTDETAIL.STUDENTCONTACTASSOCID = STUDENTCONTACTASSOC.STUDENTCONTACTASSOCID
						AND studentcontactdetail.ISCUSTODIAL = 1
				INNER JOIN person ON person.id = studentcontactassoc.personid
				INNER JOIN PERSONEMAILADDRESSASSOC ON PERSONEMAILADDRESSASSOC.PERSONID = person.id
				INNER JOIN emailaddress ON emailaddress.emailaddressid = PERSONEMAILADDRESSASSOC.EMAILADDRESSID
		WHERE students.STUDENT_NUMBER = ~(student_number)
		GROUP BY students.STUDENT_NUMBER
		;]~(guardian_email)[/tlist_sql]';

		const thisRow = $j(el).closest('tr')

		// const email = prompt("Email Address", `~[x: useremail]`)
		$j('#mailtoaddress').val(email)


		const studentsdcid = ~[tlist_sql;SELECT dcid FROM students WHERE student_number = ~(student_number);]~(dcid)[/tlist_sql];

		$j('#email_dialog').dialog({ width: "500px;" })
		$j('#email_dialog').removeClass('hidden')
		$j('#email_dcid').val(studentsdcid)

	}

	function sendEmail() {


		const data = {
			"from": "noreply@tesd.net",
			"mailto": document.getElementById('mailtoaddress').value,
			"subject": "Important Information Regarding Your Child's Laptop Warranty",
			"body": document.getElementById('email_body').innerHTML,
			"ac": "mail"
		};	
		
	  const XHR = new XMLHttpRequest();

	  const urlEncodedDataPairs = [];

	  // Turn the data object into an array of URL-encoded key/value pairs.
	  for (const [name, value] of Object.entries(data)) {
	    urlEncodedDataPairs.push(`${encodeURIComponent(name)}=${encodeURIComponent(value)}`);
	  }

	  // Combine the pairs into a single string and replace all %-encoded spaces to
	  // the '+' character; matches the behavior of browser form submissions.
	  const urlEncodedData = urlEncodedDataPairs.join('&').replace(/%20/g, '+');

	  // Define what happens on successful data submission
	  XHR.addEventListener('load', (event) => {
	    alert('Email sent.');
	  });

	  // Define what happens in case of error
	  XHR.addEventListener('error', (event) => {
	    alert('Oops! Something went wrong.');
	  });

	  // Set up our request
	  XHR.open('POST', '/admin/changesrecorded.white_nf.html');

	  // Add the required HTTP header for form data POST requests
	  XHR.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

	  // Finally, send our data.
	  XHR.send(urlEncodedData);
	}

</script>
<!-- END fees-MBA.te-mba-customizations.content.footer.txt -->